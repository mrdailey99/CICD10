# This is a basic workflow to help you get started with Actions

name: Run Provar Tests in Parallel

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  repository_dispatch:
    types: [provar]
  push:
    branches: [ master ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "run_provar_tests"
  run_provar_tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        Plan: [Regression,Smoke] 
    env:
      provar_major_version: latest
      provar_build_version: latest
      provar_home: ${{ github.workspace }}/ProvarHome
      test_environment: ''
      provar_secrets_password: ${{ secrets.PROVAR_SECRETS_PASSWORD }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Download Provar CLI
        run: |
          wget -nv https://download.provartesting.com/${{ env.provar_major_version }}/Provar_ANT_${{ env.provar_build_version }}.zip

      - name: Setup Provar CLI
        run: |
          echo "Unzip Provar ANT Files"
          unzip -q Provar_ANT_${{ env.provar_build_version }}.zip -d $GITHUB_WORKSPACE/ProvarHome
          ls -la ${{ env.provar_home }}
          # ERROR IN 2.10.1.05 
          rm ${{ env.provar_home }}/lib/com.sun.jna.platform_5.8.0.jar
          rm ${{ env.provar_home }}/lib/com.sun.jna_5.8.0.jar

      - name: Run Provar Tests
        env:
          test_plan: ${{ matrix.Plan }}
        run: |
          echo "Running Test Plan: '${{ env.test_plan }}'"
          xvfb-run ant -f ANT/build_github.xml

      - name: Upload Test Results 
        uses: actions/upload-artifact@v3
        if: always()
        with:
          # Artifact name
          name: Test Results ${{ matrix.Plan }} # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: '**/ANT/Results'
          retention-days: 14 # optional
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: Event File
        path: ${{ github.event_path }}